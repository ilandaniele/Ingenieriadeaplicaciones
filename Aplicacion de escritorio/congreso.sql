CREATE DATABASE congreso CHARACTER SET latin1 COLLATE latin1_spanish_ci;
USE congreso;

CREATE TABLE CIUDAD(
	cod_postal INT UNSIGNED NOT NULL,
    nombre VARCHAR(45) NOT NULL,
	inf_turistica TINYTEXT NOT NULL,
    
    CONSTRAINT pk_CIUDAD
    PRIMARY KEY (cod_postal)
)ENGINE=InnoDB;

CREATE TABLE FORO(
	codigo INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	detalle TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,

	CONSTRAINT pk_FORO
	PRIMARY KEY(codigo),
		
	CONSTRAINT FK_FORO_CIUDAD
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
		
)ENGINE=InnoDB;

CREATE TABLE HOTELES(
    nombre VARCHAR(45) NOT NULL,
    direccion VARCHAR(45) NOT NULL,
	descripcion TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,
    
    CONSTRAINT pk_HOTELES
    PRIMARY KEY (nombre),

	CONSTRAINT FK_FORO_CIU
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;



CREATE TABLE EVENTO(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	lugar VARCHAR (40) NOT NULL, 
	fecha DATE NOT NULL, 
	horainicio TIME NOT NULL,
    horafin TIME NOT NULL,
	detalle TINYTEXT NOT NULL,
    nombre_foro VARCHAR (40) NOT NULL, 
	
	CONSTRAINT pk_EVENTO
	PRIMARY KEY(id)
    
    
)ENGINE=InnoDB;

CREATE TABLE EVENTOACADEMICO(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL,
    aula VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOACADEMICO
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOACADEMICO_EVENTO
    FOREIGN KEY (id) REFERENCES EVENTO(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EVENTOSOCIAL(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
    interes VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOSOCIAL
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOSOCIAL_EVENTO
    FOREIGN KEY (id) REFERENCES EVENTO(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE USUARIO(
	username VARCHAR (40) NOT NULL,
	password VARCHAR (40) NOT NULL, 
	nombre_usuario VARCHAR (40) NOT NULL, 
    apellido VARCHAR (40) NOT NULL, 
	dni INT UNSIGNED NOT NULL,
    es_admin INT UNSIGNED NOT NULL,
	
	CONSTRAINT pk_USUARIO
	PRIMARY KEY(dni)
)ENGINE=InnoDB;

CREATE TABLE EXPOSITOR(
	dni INT UNSIGNED NOT NULL, 
	institucion VARCHAR (40) NOT NULL, 
	cargo VARCHAR (40) NOT NULL, 
	biografia MEDIUMTEXT NOT NULL,
	
	
	CONSTRAINT pk_EXPOSITOR
	PRIMARY KEY(dni),
    
    CONSTRAINT FK_EXPOSITOR_USUARIO
    FOREIGN KEY (dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE PRESENTA(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_PRESENTA
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_PRESENTA_EXPOSITOR
	FOREIGN KEY(dni) REFERENCES EXPOSITOR(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_PRESENTA_EVENTOACADEMICO
	FOREIGN KEY(id) REFERENCES EVENTOACADEMICO(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE ASISTE(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_ASISTE
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_ASISTE_USUARIO
	FOREIGN KEY(dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_ASISTE_EVENTO
	FOREIGN KEY(id) REFERENCES EVENTO(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE TOKENS(
	  id int(20) NOT NULL AUTO_INCREMENT,
      token varchar(200) NOT NULL,
      PRIMARY KEY (id),
      UNIQUE (token)
    ) ENGINE=InnoDB;
	
CREATE TABLE CIUDAD_FRANCES(
	cod_postal INT UNSIGNED NOT NULL,
    nombre VARCHAR(45) NOT NULL,
	inf_turistica TINYTEXT NOT NULL,
    
    CONSTRAINT pk_CIUDAD_FRANCES
    PRIMARY KEY (cod_postal)
)ENGINE=InnoDB;

CREATE TABLE FORO_FRANCES(
	codigo INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	detalle TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,

	CONSTRAINT pk_FORO_FRANCES
	PRIMARY KEY(codigo),
		
	CONSTRAINT FK_FORO_CIUDAD_FRANCES
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD_FRANCES(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
		
)ENGINE=InnoDB;

CREATE TABLE HOTELES_FRANCES(
    nombre VARCHAR(45) NOT NULL,
    direccion VARCHAR(45) NOT NULL,
	descripcion TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,
    
    CONSTRAINT pk_HOTELES_FRANCES
    PRIMARY KEY (nombre),

	CONSTRAINT FK_FORO_CIU_FRANCES
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD_FRANCES(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EVENTO_FRANCES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	lugar VARCHAR (40) NOT NULL, 
	fecha DATE NOT NULL, 
	horainicio TIME NOT NULL,
    horafin TIME NOT NULL,
	detalle TINYTEXT NOT NULL,
    nombre_foro VARCHAR (40) NOT NULL, 
	
	CONSTRAINT pk_EVENTO_FRANCES
	PRIMARY KEY(id)
    
    
)ENGINE=InnoDB;

CREATE TABLE EVENTOACADEMICO_FRANCES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL,
    aula VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOACADEMICO_FRANCES
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOACADEMICO_EVENTO_FRANCES
    FOREIGN KEY (id) REFERENCES EVENTO_FRANCES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EVENTOSOCIAL_FRANCES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
    interes VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOSOCIAL_FRANCES
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOSOCIAL_EVENTO_FRANCES
    FOREIGN KEY (id) REFERENCES EVENTO_FRANCES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EXPOSITOR_FRANCES(
	dni INT UNSIGNED NOT NULL, 
	institucion VARCHAR (40) NOT NULL, 
	cargo VARCHAR (40) NOT NULL, 
	biografia MEDIUMTEXT NOT NULL,
	
	
	CONSTRAINT pk_EXPOSITOR_FRANCES
	PRIMARY KEY(dni),
    
    CONSTRAINT FK_EXPOSITOR_USUARIO_FRANCES
    FOREIGN KEY (dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE PRESENTA_FRANCES(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_PRESENTA_FRANCES
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_PRESENTA_EXPOSITOR_FRANCES
	FOREIGN KEY(dni) REFERENCES EXPOSITOR_FRANCES(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_PRESENTA_EVENTOACADEMICO_FRANCES
	FOREIGN KEY(id) REFERENCES EVENTOACADEMICO_FRANCES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE ASISTE_FRANCES(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_PRESENTA_FRANCES
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_PRESENTA_USUARIO_FRANCES
	FOREIGN KEY(dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_PRESENTA_EVENTO_FRANCES
	FOREIGN KEY(id) REFERENCES EVENTO_FRANCES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;



	
CREATE TABLE CIUDAD_INGLES(
	cod_postal INT UNSIGNED NOT NULL,
    nombre VARCHAR(45) NOT NULL,
	inf_turistica TINYTEXT NOT NULL,
    
    CONSTRAINT pk_CIUDAD_INGLES
    PRIMARY KEY (cod_postal)
)ENGINE=InnoDB;

CREATE TABLE FORO_INGLES(
	codigo INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	detalle TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,

	CONSTRAINT pk_FORO_INGLES
	PRIMARY KEY(codigo),
		
	CONSTRAINT FK_FORO_CIUDAD_INGLES
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD_INGLES(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
		
)ENGINE=InnoDB;

CREATE TABLE HOTELES_INGLES(
    nombre VARCHAR(45) NOT NULL,
    direccion VARCHAR(45) NOT NULL,
	descripcion TINYTEXT NOT NULL,
	cod_postal INT UNSIGNED NOT NULL,
    
    CONSTRAINT pk_HOTELES_INGLES
    PRIMARY KEY (nombre),

	CONSTRAINT FK_FORO_CIU_INGLES
    FOREIGN KEY (cod_postal) REFERENCES CIUDAD_INGLES(cod_postal)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EVENTO_INGLES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
	lugar VARCHAR (40) NOT NULL, 
	fecha DATE NOT NULL, 
	horainicio TIME NOT NULL,
    horafin TIME NOT NULL,
	detalle TINYTEXT NOT NULL,
    nombre_foro VARCHAR (40) NOT NULL, 
	
	CONSTRAINT pk_EVENTO_INGLES
	PRIMARY KEY(id)
    
    
)ENGINE=InnoDB;

CREATE TABLE EVENTOACADEMICO_INGLES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL,
    aula VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOACADEMICO_INGLES
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOACADEMICO_EVENTO_INGLES
    FOREIGN KEY (id) REFERENCES EVENTO_INGLES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EVENTOSOCIAL_INGLES(
	id INT UNSIGNED NOT NULL,
	nombre VARCHAR (40) NOT NULL, 
    interes VARCHAR (10) NOT NULL,
	
	CONSTRAINT pk_EVENTOSOCIAL_INGLES
	PRIMARY KEY(id),
    
	CONSTRAINT FK_EVENTOSOCIAL_EVENTO_INLES
    FOREIGN KEY (id) REFERENCES EVENTO_INGLES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE EXPOSITOR_INGLES(
	dni INT UNSIGNED NOT NULL, 
	institucion VARCHAR (40) NOT NULL, 
	cargo VARCHAR (40) NOT NULL, 
	biografia MEDIUMTEXT NOT NULL,
	
	
	CONSTRAINT pk_EXPOSITOR_INGLES
	PRIMARY KEY(dni),
    
    CONSTRAINT FK_EXPOSITOR_USUARIO_INGLES
    FOREIGN KEY (dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE PRESENTA_INGLES(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_PRESENTA_INGLES
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_PRESENTA_EXPOSITOR_INGLES
	FOREIGN KEY(dni) REFERENCES EXPOSITOR_INGLES(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_PRESENTA_EVENTOACADEMICO_INGLES
	FOREIGN KEY(id) REFERENCES EVENTOACADEMICO_INGLES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

CREATE TABLE ASISTE_INGLES(
	dni INT UNSIGNED NOT NULL, 
	id INT UNSIGNED NOT NULL,
	
    CONSTRAINT PK_PRESENTA_INGLES
    PRIMARY KEY (dni,id),
    
	CONSTRAINT FK_PRESENTA_USUARIO_INGLES
	FOREIGN KEY(dni) REFERENCES USUARIO(dni)
		ON DELETE RESTRICT ON UPDATE CASCADE,
        
	CONSTRAINT FK_PRESENTA_EVENTO_INGLES
	FOREIGN KEY(id) REFERENCES EVENTO_INGLES(id)
		ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB;

# Creacion de usuarios y otorgamiento de privilegios
	
# Creacion de usuario administrador
    GRANT ALL PRIVILEGES ON congreso.* TO admin@localhost IDENTIFIED BY 'admin' WITH GRANT OPTION;
	
# Creacion del Usuario comun que visita el congreso y se otorgan sus privilegios

	GRANT SELECT ON congreso.USUARIO TO visitante@'%' IDENTIFIED BY 'visitante';
	GRANT SELECT ON congreso.EVENTO TO visitante@'%';
	GRANT SELECT ON congreso.FORO TO visitante@'%';
    
	


delimiter !
CREATE PROCEDURE ExisteForo()
BEGIN
	IF((SELECT count(nombre) FROM FORO) = 0)
	THEN
		SELECT 0;
	ELSE
		SELECT 1;
	END IF;
END; !
/*delimiter ; # restablece ';' como delimitador de sentencias
*/

CREATE PROCEDURE ObtenerForo()
BEGIN
	SELECT nombre FROM FORO;
END; !
delimiter ; # restablece ';' como delimitador de sentencias
/*
CONSTRAINT FK_EVENTO_FORO
    FOREIGN KEY (nombre_foro) REFERENCES FORO(nombre)
		ON DELETE RESTRICT ON UPDATE CASCADE*/